{
  "openapi": "3.0.3",
  "info": {
    "title": "OAuth",
    "description": "Retrive OAuth Bearer token on behalf of another user",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://wwwcie.ups.com/"
    }
  ],
  "paths": {
    "/security/v1/oauth/authorize": {
      "get": {
        "description": "Authorize Client",
        "operationId": "AuthorizeClient",
        "parameters": [
          {
            "in": "query",
            "name": "client_id",
            "schema": {
              "type": "string"
            },
            "description": "Client id for the requesting application.",
            "required": true
          },
          {
            "in": "query",
            "name": "redirect_uri",
            "schema": {
              "type": "string"
            },
            "description": "Callback URL for the requesting application.",
            "required": true
          },
          {
            "in": "query",
            "name": "response_type",
            "schema": {
              "type": "string"
            },
            "description": "Valid Values: code",
            "required": true
          },
          {
            "in": "query",
            "name": "state",
            "schema": {
              "type": "string"
            },
            "description": "Optional value supplied by the client, will be returned during the redirection back to the client. Can be utilized to maintain state between Auth-Code request and callback event."
          },
          {
            "in": "query",
            "name": "scope",
            "schema": {
              "type": "string"
            },
            "description": "Optional value supplied by the client, will be returned during the redirection back to the client."
          }
        ],
        "responses": {
          "302": {
            "description": "successful operation",
            "headers": {
              "location": {
                "schema": {
                  "type": "string"
                },
                "description": "The UPS login redirection URI. Will be in the following format: https://www.ups.com/lasso/signin?client_id={client_id}&redirect_uri={redirect_uri}&response_type=code&scope={scope}&state={state}&type=ups_com_api"
              },
              "appname": {
                "schema": {
                  "type": "string"
                },
                "description": "App name of the application requesting the Auth-Code."
              },
              "displayname": {
                "schema": {
                  "type": "string"
                },
                "description": "Display name of the application requesting the Auth-Code."
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tokenErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tokenErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/security/v1/oauth/token": {
      "post": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "description": "Generate Token",
        "operationId": "GenerateToken",
        "parameters": [
          {
            "in": "header",
            "name": "x-merchant-id",
            "schema": {
              "type": "string"
            },
            "description": "Client merchant ID",
            "required": false
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "description": "Valid values: authorization_code",
                    "default": "authorization_code"
                  },
                  "code": {
                    "type": "string",
                    "description": "Authorization code from the UPS login system."
                  },
                  "redirect_uri": {
                    "type": "string",
                    "description": "Callback URL for the requesting application."
                  }
                },
                "required": ["grant_type", "code", "redirect_uri"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generateTokenSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tokenErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tokenErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Blocked Merchant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tokenErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Quota Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tokenErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/security/v1/oauth/refresh": {
      "post": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "RefreshToken",
        "description": "Refresh Token",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "description": "Valid values: refresh_token",
                    "default": "refresh_token"
                  },
                  "refresh_token": {
                    "type": "string",
                    "description": "Refresh token from GenerateToken operation"
                  }
                },
                "required": ["grant_type", "refresh_token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/refreshTokenSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tokenErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tokenErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Quota Limit Exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tokenErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "generateTokenSuccessResponse": {
        "type": "object",
        "properties": {
          "refresh_token_expires_in": {
            "description": "Expiration time for requested refresh token in seconds.",
            "type": "string"
          },
          "refresh_token_status": {
            "description": "Status for requested refresh token.",
            "type": "string"
          },
          "token_type": {
            "description": "Type of requested access token",
            "type": "string"
          },
          "issued_at": {
            "description": "Issue time of requested token.",
            "type": "string"
          },
          "client_id": {
            "description": "Client id for requested token.",
            "type": "string"
          },
          "access_token": {
            "description": "Token to be used in API requests.",
            "type": "string"
          },
          "refresh_token": {
            "description": "Refresh token to be used in refresh requests when obtaining new access token.",
            "type": "string"
          },
          "scope": {
            "description": "Scope for requested token.",
            "type": "string"
          },
          "refresh_token_issued_at": {
            "description": "Time that refresh token was issued.",
            "type": "string"
          },
          "expires_in": {
            "description": "Expire time for requested token in seconds.",
            "type": "string"
          },
          "refresh_count": {
            "description": "Number of refreshes for requested token.",
            "type": "string"
          },
          "status": {
            "description": "Status for requested token.",
            "type": "string"
          }
        }
      },
      "refreshTokenSuccessResponse": {
        "type": "object",
        "properties": {
          "refresh_token_expires_in": {
            "description": "Expiration time for requested refresh token in seconds.",
            "type": "string"
          },
          "refresh_token_status": {
            "description": "Status for requested refresh token.",
            "type": "string"
          },
          "token_type": {
            "description": "Type for requested token.",
            "type": "string"
          },
          "issued_at": {
            "description": "Issue time for requested token.",
            "type": "string"
          },
          "client_id": {
            "description": "Client id for requested token.",
            "type": "string"
          },
          "access_token": {
            "description": "Token to be used in API requests.",
            "type": "string"
          },
          "refresh_token": {
            "description": "Token to be used in refresh requests.",
            "type": "string"
          },
          "scope": {
            "description": "Scope for requested token.",
            "type": "string"
          },
          "refresh_token_issued_at": {
            "description": "Issue time for requested refresh token.",
            "type": "string"
          },
          "expires_in": {
            "description": "Expiration time for requested access token in seconds.",
            "type": "string"
          },
          "refresh_count": {
            "description": "Number of refreshes for requested token.",
            "type": "string"
          },
          "status": {
            "description": "Status for requested token.",
            "type": "string"
          }
        }
      },
      "tokenErrorResponse": {
        "type": "object",
        "properties": {
          "response": {
            "$ref": "#/components/schemas/errorResponseWrapper"
          }
        }
      },
      "errorResponseWrapper": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errors"
            }
          }
        }
      },
      "errors": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Error code",
            "type": "string"
          },
          "message": {
            "description": "Error message",
            "type": "string"
          }
        }
      }
    }
  }
}
